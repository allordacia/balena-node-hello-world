# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/#dockerfile-templates
# and about balena base images here: https://www.balena.io/docs/reference/base-images/base-images/
# FROM balenalib/%%BALENA_MACHINE_NAME%%-node:10-stretch-run
FROM balenalib/%%BALENA_MACHINE_NAME%%-ubuntu-node:10.18-bionic-run

# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
RUN apt-get update
RUN install_packages curl git jq python3 ansible tar bash ca-certificates git openssl unzip wget python3-pip sudo acl build-essential python3-dev python3.8-venv python3.8-distutils apt nfs-common python-is-python3 vim tzdata
# RUN install_packages apt

# # Defines our working directory in container
WORKDIR /usr/src/app

# # Copies the package.json first for better cache on later pushes
COPY package*.json ./

# # This install npm dependencies on the balena build server,
# # making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production --unsafe-perm && npm cache verify && rm -rf /tmp/*

EXPOSE 8555
EXPOSE 8444

ENV keys="generate"
ENV harvester="false"
ENV farmer="false"
ENV plots_dir="/plots"
ENV farmer_address="null"
ENV farmer_port="null"
ENV testnet="false"
ENV full_node_port="null"
ENV TZ="UTC"
ARG BRANCH

RUN DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y curl jq python3 ansible tar bash ca-certificates git openssl unzip wget python3-pip sudo acl build-essential python3-dev python3.8-venv python3.8-distutils apt nfs-common python-is-python3 vim tzdata

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN dpkg-reconfigure -f noninteractive tzdata
# # This will copy all files in our root to the working directory in the container
COPY . ./

# # Enable udevd so that plugged dynamic hardware devices show up in our container.
# ENV UDEV=1

# # server.js will run when container starts up on the device
CMD ["npm", "start"]

